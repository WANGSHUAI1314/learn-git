//package password;
import java.io.IOException;
import java.util.Scanner;
public class passManager {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while(true) {
        System.out.println("==============================");
        System.out.println("       欢迎使用密码管理系统        ");
        System.out.println("==============================");
        System.out.println("         请选择操作:           ");
        System.out.println("         1. 加密密码          ");
        System.out.println("         2. 解密密码          ");
        System.out.println("         5. 退出              ");
        int choice = scanner.nextInt();
        
        switch (choice) {
            case 1:
                encryptPassword();
                break;
            case 2:
                decryptPassword();
                break;
            case 5:System.exit(choice);break;  
            default:
                System.out.println("无效的选择");
                break;
        }
        }
    }
    
    // 加密密码
    public static void encryptPassword() {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("请输入要加密的密码：");
        String password = scanner.nextLine();
        
        StringBuilder encryptedPassword = new StringBuilder(password);
        for (int i = 0; i < encryptedPassword.length(); i++) {
            char c = encryptedPassword.charAt(i);
            int asciiCode = (int) c;
            
            // 将字符的ASCII码加上位置和偏移值
            int encryptedAsciiCode = asciiCode + i + 1 + 3;
            
            encryptedPassword.setCharAt(i,(char) encryptedAsciiCode);
        }
        
        // 调换第一位和最后一位的顺序
        if (encryptedPassword.length() > 1) {
            char firstChar = encryptedPassword.charAt(0);
            char lastChar = encryptedPassword.charAt(encryptedPassword.length() - 1);
            encryptedPassword.setCharAt(0, lastChar);
            encryptedPassword.setCharAt(encryptedPassword.length() - 1, firstChar);
        }
        
        // 反转字符串
        encryptedPassword.reverse();
        
        System.out.println("加密后的密码为：" + encryptedPassword.toString());
        System.out.println("请按下任意键继续...");
        try {
            System.in.read();
        } catch (IOException e) {
            e.printStackTrace();
        }}
    
    // 解密密码
    public static void decryptPassword() {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("请输入要解密的密码：");
        String encryptedPassword = scanner.nextLine();
        
        StringBuilder decryptedPassword = new StringBuilder(encryptedPassword);
        
        // 反转字符串
        decryptedPassword.reverse();
        
        // 调换第一位和最后一位的顺序
        if (decryptedPassword.length() > 1) {
            char firstChar = decryptedPassword.charAt(0);
            char lastChar = decryptedPassword.charAt(decryptedPassword.length() - 1);
            decryptedPassword.setCharAt(0, lastChar);
            decryptedPassword.setCharAt(decryptedPassword.length() - 1, firstChar);
        }
        
        //StringBuilder originalPassword = new StringBuilder();
        for (int i = 0; i < decryptedPassword.length(); i++) {
            char c = decryptedPassword.charAt(i);
            int encryptedAsciiCode = (int) c;
            
            // 将字符的ASCII码减去位置和偏移值
            int asciiCode = encryptedAsciiCode - i - 1 - 3;
            
            decryptedPassword.setCharAt(i,(char) asciiCode);
        }
        
        System.out.println("解密后的密码为：" + decryptedPassword.toString());
    System.out.println("请按下任意键继续...");
    try {
        System.in.read();
    } catch (IOException e) {
        e.printStackTrace();
    }}
   
}